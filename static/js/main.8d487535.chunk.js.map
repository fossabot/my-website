{"version":3,"sources":["assets/images/logos/github.svg","assets/images/photos/me.jpg","assets/images/photos/me@2x.jpg","assets/images/photos/me@3x.jpg","assets/images/photos/me@4x.jpg","assets/images/logos/linkedin.svg","assets/images/logos/twitter.svg","assets/images/logos/angular.svg","assets/images/logos/css.svg","assets/images/logos/docker.svg","assets/images/logos/html.svg","assets/images/logos/javascript.svg","assets/images/logos/markdown.svg","assets/images/logos/scss.svg","assets/images/logos/shell.svg","assets/images/logos/vscode.svg","assets/images/flags/brazil.svg","assets/images/flags/ireland.svg","assets/images/flags/spain.svg","settings.ts","components/intro/Intro.tsx","components/social/Social.tsx","components/gists/GistsService.ts","components/gists/GistsGetLogo.ts","components/gists/Gists.tsx","components/footer/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","settings","github","urlParams","url","user","limit","gist","title","languageImgPath","logo","intro","bio","subTitleOptions","footer","links","brazil","ireland","spain","Intro","className","src","profile","srcSet","profile2x","profile3x","profile4x","alt","id","Math","floor","random","length","randomizeSubTitle","Social","href","linkedin","twitter","GistsService","getUrl","params","getGists","a","this","fetch","response","json","mapGists","gists","Object","values","map","files","html_url","description","language","logoDefault","name","githubLogo","logos","angularLogo","cssLogo","dockerLogo","htmlLogo","javascriptLogo","markdownLogo","scssLogo","shellLogo","vscodeLogo","gistsGetLogo","logoName","find","item","Gists","useState","setGists","useEffect","result","fetchGists","i","key","toLowerCase","Footer","brazilFlag","irelandFlag","spainFlag","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8d487535.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.920f88f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/me.0c3defde.jpg\";","module.exports = __webpack_public_path__ + \"static/media/me@2x.b9731352.jpg\";","module.exports = __webpack_public_path__ + \"static/media/me@3x.1331ab22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/me@4x.79ecdb30.jpg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.5d660da2.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.10d63ea7.svg\";","module.exports = __webpack_public_path__ + \"static/media/angular.196952b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/css.1a02f067.svg\";","module.exports = __webpack_public_path__ + \"static/media/docker.6ff6f984.svg\";","module.exports = __webpack_public_path__ + \"static/media/html.ec24189b.svg\";","module.exports = __webpack_public_path__ + \"static/media/javascript.2c7533fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/markdown.fe936ab5.svg\";","module.exports = __webpack_public_path__ + \"static/media/scss.c0a606f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/shell.287a4561.svg\";","module.exports = __webpack_public_path__ + \"static/media/vscode.c7b8051e.svg\";","module.exports = __webpack_public_path__ + \"static/media/brazil.407b2322.svg\";","module.exports = __webpack_public_path__ + \"static/media/ireland.6f51ceb4.svg\";","module.exports = __webpack_public_path__ + \"static/media/spain.a8224968.svg\";","export const settings = {\n  github: {\n    urlParams: {\n      url: 'https://api.github.com/users',\n      user: 'the-glima',\n      limit: '8'\n    }\n  },\n  gist: {\n    title: 'A cool Gist about something',\n    languageImgPath: 'assets/images/logos/github.svg',\n    logo: 'GitHub'\n  },\n  intro: {\n    bio:\n      'Working in web development for almost 8 years with solid experience developing web applications, creating rich UI components, building RESTful APIs and improving development workflow (CI/CD and product infrastructure). Always learning and keeping track of modern technologies and new standards.',\n    subTitleOptions: [\n      'Front-End Developer',\n      'Front-End Engineer',\n      'JavaScript Engineer',\n      'JavaScript Developer',\n      'Software Developer',\n      'Software Engineer',\n      'Infrastructure Developer',\n      'Web Designer',\n      'UI Developer',\n      '10x Engineer *',\n      'JS-Framework Developer'\n    ]\n  },\n  footer: {\n    links: {\n      brazil:\n        'https://www.google.com/search?q=p%C3%A3o+de+queijo&rlz=1C1GCEA_enES841ES841&oq=p%C3%A3o+de+quu&aqs=chrome.1.69i57j0l7.8238j0j7&sourceid=chrome&ie=UTF-8',\n      ireland:\n        'https://www.google.com/search?rlz=1C1GCEA_enES841ES841&ei=l0RkXs7RLJbolwSHlJmYCw&q=guiness+pint&oq=guiness+pint&gs_l=psy-ab.3..0i10l10.113793.114999..115186...0.0..0.141.1332.7j6......0....1..gws-wiz.......0i7i30j0j0i67.cx-4hy65v7I&ved=0ahUKEwiO-ZC914noAhUW9IUKHQdKBrMQ4dUDCAs&uact=5',\n      spain:\n        'https://www.google.com/search?rlz=1C1GCEA_enES841ES841&ei=DEVkXtyZDMm4aZqAu5AG&q=j%C3%A1mon+iberico&oq=j%C3%A1mon+&gs_l=psy-ab.3.0.0j0i30l4j0i5i30j0i30l3j0i5i30.25040.26774..28635...0.0..0.121.646.1j5......0....1..gws-wiz.......0i273.Wk5_W6D8jGA'\n    }\n  }\n}\n","import React from 'react'\nimport './Intro.css'\n\nimport {settings} from '../../settings'\nimport profile from '../../assets/images/photos/me.jpg'\nimport profile2x from '../../assets/images/photos/me@2x.jpg'\nimport profile3x from '../../assets/images/photos/me@3x.jpg'\nimport profile4x from '../../assets/images/photos/me@4x.jpg'\n\nconst Intro = () => {\n  const randomizeSubTitle = (): string => {\n    const subTitleOptions = settings.intro.subTitleOptions\n    const randomness = Math.floor(Math.random() * subTitleOptions.length)\n\n    return subTitleOptions[randomness] || subTitleOptions[0]\n  }\n\n  return (\n    <section className=\"section section-intro\">\n      <header>\n        <div className=\"picture-wrapper\">\n          <img\n            className=\"picture\"\n            src={profile}\n            srcSet={`${profile2x} 2x,${profile3x} 3x, ${profile4x} 4x`}\n            alt=\"Gabriel Lima\"\n          />\n        </div>\n        <h1>Gabriel Lima</h1>\n        <h2 id=\"subtitle\">{randomizeSubTitle()}</h2>\n      </header>\n\n      <p className=\"bio\">{settings.intro.bio}</p>\n    </section>\n  )\n}\n\nexport default Intro\n","import React from 'react'\nimport './Social.css'\n\nimport linkedin from '../../assets/images/logos/linkedin.svg'\nimport twitter from '../../assets/images/logos/twitter.svg'\nimport github from '../../assets/images/logos/github.svg'\n\nconst Social = () => {\n  return (\n    <section className=\"section section-social-links\">\n      <ul className=\"social-links-list\">\n        <li>\n          <a\n            className=\"social-link\"\n            href=\"https://www.linkedin.com/in/gabriel--lima/\"\n            title=\"Go to my LinkedIn Profile\"\n          >\n            <img src={linkedin} alt=\"Linkedin Logo\" />\n            <span>LinkedIn</span>\n          </a>\n        </li>\n        <li>\n          <a className=\"social-link\" href=\"https://twitter.com/__glima\" title=\"Go to my Twitter Profile\">\n            <img src={twitter} alt=\"Twitter Logo\" />\n            <span>Twitter</span>\n          </a>\n        </li>\n        <li>\n          <a className=\"social-link\" href=\"https://github.com/the-glima\" title=\"Go to my GitHub Profile\">\n            <img src={github} alt=\"GitHub Logo\" />\n            <span>GitHub</span>\n          </a>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default Social\n","import {GistFilesModel, GistDOMModel, GistModel, GistsResponseModel} from './GistsModel'\nimport {settings} from '../../settings'\n\nexport const GistsService = {\n  getUrl: (params = settings.github.urlParams): string =>\n    `${params.url}/${params.user}/gists?page=1&per_page=${params.limit}`,\n\n  getGists: async function (): Promise<GistsResponseModel> {\n    const url = this.getUrl()\n\n    try {\n      const response = await fetch(url)\n      return await response.json()\n    } catch (error) {\n      return error\n    }\n  },\n\n  mapGists: async function (): Promise<GistDOMModel[]> {\n    const gists: GistsResponseModel = await this.getGists()\n\n    return Object.values(gists).map((gist: GistModel) => {\n      const files: GistFilesModel[] = Object.values(gist.files)\n\n      return {\n        id: gist.id,\n        url: gist.html_url,\n        files: files,\n        title: gist.description || settings.gist.title,\n        language: files[0].language || settings.gist.logo\n      }\n    })\n  }\n}\n","import angularLogo from '../../assets/images/logos/angular.svg'\nimport cssLogo from '../../assets/images/logos/css.svg'\nimport dockerLogo from '../../assets/images/logos/docker.svg'\nimport githubLogo from '../../assets/images/logos/github.svg'\nimport htmlLogo from '../../assets/images/logos/html.svg'\nimport javascriptLogo from '../../assets/images/logos/javascript.svg'\nimport markdownLogo from '../../assets/images/logos/markdown.svg'\nimport scssLogo from '../../assets/images/logos/scss.svg'\nimport shellLogo from '../../assets/images/logos/shell.svg'\nimport vscodeLogo from '../../assets/images/logos/vscode.svg'\n\nconst logoDefault = {name: 'github', src: githubLogo}\n\nconst logos = [\n  {name: 'angular', src: angularLogo},\n  {name: 'css', src: cssLogo},\n  {name: 'docker', src: dockerLogo},\n  {name: 'html', src: htmlLogo},\n  {name: 'javascript', src: javascriptLogo},\n  {name: 'markdown', src: markdownLogo},\n  {name: 'scss', src: scssLogo},\n  {name: 'shell', src: shellLogo},\n  {name: 'vscode', src: vscodeLogo}\n]\n\nexport const gistsGetLogo = (logoName: string) => {\n  const logo = Object.values(logos).find((item) => item.name === logoName)\n\n  return logo ? logo : logoDefault\n}\n","import React, {useState, useEffect} from 'react'\nimport './Gists.css'\n\nimport {GistDOMModel} from './GistsModel'\nimport {GistsService} from './GistsService'\nimport {gistsGetLogo} from './GistsGetLogo'\n\nconst Gists = () => {\n  const [gists, setGists]: any = useState([])\n\n  useEffect(() => {\n    const fetchGists = async () => {\n      const result = await GistsService.mapGists()\n      setGists(result)\n    }\n\n    fetchGists()\n  }, [])\n\n  return (\n    <section className=\"section section-gists\">\n      <h3>Latest Gists</h3>\n      <h4>No time for blogging, sorry</h4>\n\n      <ul className=\"gists-list\">\n        {gists.map((gist: GistDOMModel, i: number) => (\n          <li key={i}>\n            <a className=\"gist-link\" href={gist.url} title={`Check this gist: ${gist.title}`}>\n              <img className=\"gist-logo\" src={gistsGetLogo(gist.language.toLowerCase())?.src} alt={gist.language} />\n              <span className=\"gist-title\">{gist.title}</span>\n            </a>\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"gist-section-link\">\n        <a href=\"https://gist.github.com/the-glima\">See More</a>\n      </div>\n    </section>\n  )\n}\n\nexport default Gists\n","import React from 'react'\nimport './Footer.css'\n\nimport {settings} from '../../settings'\nimport brazilFlag from '../../assets/images/flags/brazil.svg'\nimport irelandFlag from '../../assets/images/flags/ireland.svg'\nimport spainFlag from '../../assets/images/flags/spain.svg'\n\nconst Footer = () => {\n  return (\n    <footer className=\"flex\">\n      <p>\n        © 2020 Gabriel Lima - From\n        <a href={settings.footer.links.brazil} title=\"Brazil\">\n          <img src={brazilFlag} alt=\"Brazil's flag\" />\n        </a>{' '}\n        then\n        <a href={settings.footer.links.ireland} title=\"Ireland\">\n          <img src={irelandFlag} alt=\"Ireland's flag\" />\n        </a>{' '}\n        currently\n        <a href={settings.footer.links.spain} title=\"Spain\">\n          <img src={spainFlag} alt=\"Spain's flag\" />\n        </a>\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport Intro from './components/intro/Intro'\nimport Social from './components/social/Social'\nimport Gists from './components/gists/Gists'\nimport Footer from './components/footer/Footer'\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Intro />\n      <Social />\n      <Gists />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'}\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './assets/styles/variables.css'\nimport './assets/styles/reset.css'\nimport './assets/styles/scaffold.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}